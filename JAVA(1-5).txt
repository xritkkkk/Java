JAVA 
SLIP 1
Q1=
import java.util.Scanner;
public class MultiplicationTable {
    public static void main(String[] args) {
                Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number to generate its multiplication table: ");
        int number = scanner.nextInt();
        System.out.println("Multiplication Table of " + number + ":");
        for (int i = 1; i <= 10; i++) {
            System.out.println(number + " x " + i + " = " + (number * i));
        }
        scanner.close();
    }
}
Q2=(1)
import java.util.LinkedList;
import java.util.Iterator;
import java.util.ListIterator;
public class ColorLinkedList {
    public static void main(String[] args) {
       LinkedList<String> colors = new LinkedList<>();
        colors.add("red");
        colors.add("blue");
        colors.add("yellow");
        colors.add("orange");
        System.out.println("Colors in the list:");
        Iterator<String> iterator = colors.iterator();
        while (iterator.hasNext()) {
            System.out.println(iterator.next());
        }
                System.out.println("\nColors in reverse order:");
        ListIterator<String> listIterator = colors.listIterator(colors.size());
        while (listIterator.hasPrevious()) {
            System.out.println(listIterator.previous());
        }
        LinkedList<String> newColors = new LinkedList<>();
        newColors.add("pink");
        newColors.add("green");
       int blueIndex = colors.indexOf("blue");
        int yellowIndex = colors.indexOf("yellow");
        colors.addAll(blueIndex + 1, newColors); // Insert after blue
        System.out.println("\nUpdated list of colors:");
        for (String color : colors) {
            System.out.println(color);
        }
    }
}
*SLIP2*
Q1=
import java.util.ArrayList;
import java.util.Scanner;
public class ArrayListExample {
    public static void main(String[] args) {
             ArrayList<Integer> numbers = new ArrayList<>();
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of integers you want to store: ");
        int n = scanner.nextInt();
        System.out.println("Enter " + n + " integers:");
        for (int i = 0; i < n; i++) {
            System.out.print("Integer " + (i + 1) + ": ");
            int num = scanner.nextInt();
            numbers.add(num); // Add the integer to the ArrayList
        }
        System.out.println("\nElements in the ArrayList:");
        for (int number : numbers) {
            System.out.println(number);
        }
        scanner.close();
    }
}
Q2=(2)
import java.util.Scanner;
class InvalidNameException extends Exception {
    public InvalidNameException(String message) {
        super(message);
    }
}
public class DoctorNameValidator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);      
        System.out.print("Enter the Doctor's Name: ");
        String doctorName = scanner.nextLine();
        try {
            validateName(doctorName);
            System.out.println("Doctor's Name is valid: " + doctorName);
        } catch (InvalidNameException e) {
            System.out.println(e.getMessage());
        } finally {
                        scanner.close();
        }
    }
    public static void validateName(String name) throws InvalidNameException {
        if (name == null || name.trim().isEmpty() || !name.matches("[a-zA-Z\\s]+")) {
            throw new InvalidNameException("Name is Invalid: It should not contain digits or special symbols.");
        }
    }
}
*SLIP3*
Q1=
import java.util.Scanner;
public class ArraySum {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of elements: ");
        int n = scanner.nextInt();
        int[] numbers = new int[n];
        System.out.println("Enter " + n + " different numbers:");
        for (int i = 0; i < n; i++) {
            System.out.print("Number " + (i + 1) + ": ");
            numbers[i] = scanner.nextInt();
        }
        int sum = 0;
        for (int number : numbers) {
            sum += number;
        }
        System.out.println("The sum of the elements in the array is: " + sum);
        scanner.close();
    }
}
Q2=(1)
import java.util.Scanner;
import java.util.Arrays;
import java.util.Comparator;
class Account {
    private String accNo;
    private String accName;
    private double balance;
    public Account(String accNo, String accName, double balance) {
        this.accNo = accNo;
        this.accName = accName;
        this.balance = balance;
    }
    public String getAccNo() {
        return accNo;
    }
    public String getAccName() {
        return accName;
    }
    public double getBalance() {
        return balance;
    }
    public void display() {
        System.out.printf("Account Number: %s, Account Name: %s, Balance: %.2f%n", accNo, accName, balance);
    }
      public static void sortAccount(Account[] accounts) {
        Arrays.sort(accounts, Comparator.comparingDouble(Account::getBalance));
    }
}
public class AccountManager {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
             System.out.print("Enter the number of accounts: ");
        int n = scanner.nextInt();
        scanner.nextLine();
        Account[] accounts = new Account[n];
        for (int i = 0; i < n; i++) {
            System.out.printf("Enter details for account %d:\n", i + 1);
            System.out.print("Account Number: ");
            String accNo = scanner.nextLine();
            System.out.print("Account Name: ");
            String accName = scanner.nextLine();
            System.out.print("Balance: ");
            double balance = scanner.nextDouble();
            scanner.nextLine(); // Consume the newline character
            accounts[i] = new Account(accNo, accName, balance);
        }
            Account.sortAccount(accounts);
        System.out.println("\nAccounts sorted by balance:");
        for (Account account : accounts) {
            account.display();
        }
        scanner.close();
    }
}
*SLIP4*
Q1=
import java.util.Scanner;
public class GreetUser {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter your name: ");
        String userName = scanner.nextLine();
        String upperCaseName = userName.toUpperCase();
        System.out.println("Hello, " + upperCaseName + ", nice to meet you!");
        scanner.close();
    }
}
Q2=(2)
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
public class ProgrammingLanguageSelector {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Programming Language Selector");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 200);
        frame.setLayout(new FlowLayout());
        JLabel label = new JLabel("Select a programming language:");
        frame.add(label);
        String[] languages = {"Java", "Python", "C++", "JavaScript", "Ruby"};
        JComboBox<String> languageComboBox = new JComboBox<>(languages);
        frame.add(languageComboBox);
        JButton showButton = new JButton("Show");
        frame.add(showButton);
        JLabel resultLabel = new JLabel("");
        frame.add(resultLabel);
        showButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String selectedLanguage = (String) languageComboBox.getSelectedItem();
                resultLabel.setText("Selected Language: " + selectedLanguage);
            }
        });
              frame.setVisible(true);
    }
}
*SLIP5*
Q1=
import java.util.Scanner;
class ZeroInputException extends Exception {
    public ZeroInputException(String message) {
        super(message);
    }
}
public class FactorialCalculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        try {
                        if (number == 0) {
                throw new ZeroInputException("Number is 0");
            }
            long factorial = calculateFactorial(number);
            System.out.println("Factorial of " + number + " is: " + factorial);
        } catch (ZeroInputException e) {
            System.out.println(e.getMessage());
        } finally {
                 scanner.close();
        }
    }
    public static long calculateFactorial(int num) {
        long result = 1;
        for (int i = 1; i <= num; i++) {
            result *= i;
        }
        return result;
    }
}
Q2=(2)
class Point {
    protected int x;
    protected int y;
    public Point() {
        this.x = 0;
        this.y = 0;
    }
    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
    public void display() {
        System.out.println("Point coordinates: (" + x + ", " + y + ")");
    }
}
class ColorPoint extends Point {
    private String color;
    public ColorPoint() {
        super(); // Call to Point's default constructor
        this.color = "Unknown";
    }
    public ColorPoint(int x, int y, String color) {
        super(x, y); // Call to Point's parameterized constructor
        this.color = color;
    }
    @Override
    public void display() {
        super.display(); // Call Point's display method
        System.out.println("Color: " + color);
    }
}
public class PointTest {
    public static void main(String[] args) {
          Point point1 = new Point();
        point1.display();
        Point point2 = new Point(3, 4);
        point2.display();
        ColorPoint colorPoint1 = new ColorPoint();
        colorPoint1.display();
        ColorPoint colorPoint2 = new ColorPoint(5, 6, "Red");
        colorPoint2.display();
    }
}



